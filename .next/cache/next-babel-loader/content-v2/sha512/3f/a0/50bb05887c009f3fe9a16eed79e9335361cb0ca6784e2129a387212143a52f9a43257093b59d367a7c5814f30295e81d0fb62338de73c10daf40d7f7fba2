{"ast":null,"code":"'use strict';\n\nvar fs = require('fs');\n\nvar path = require('path');\n\nvar syllableFilePath = path.join(__dirname, 'TextFiles/syllableDictionary');\nvar file = fs.readFileSync(syllableFilePath, \"utf8\");\nvar dictionaryInitialArray = file.split('\\n');\nvar dictionaryArray = dictionaryInitialArray.filter(function (string) {\n  if (!string.includes('(1)')) {\n    if (!string.includes('(2)')) {\n      if (!string.includes('(3)')) {\n        return string;\n      }\n    }\n  }\n});\n\nvar stringsToObjects = function stringsToObjects(arr) {\n  var obj = {};\n\n  for (var i = 0; i < arr.length; i++) {\n    var newKey = arr[i].match(/^[^\\s]+/);\n    obj[newKey] = arr[i].slice(newKey.toString().length + 2);\n  }\n\n  return obj;\n};\n\nvar dictionaryObject = stringsToObjects(dictionaryArray);\nmodule.exports = dictionaryObject;","map":{"version":3,"sources":["/Users/hannahcain/iambic/extractDictionary.js"],"names":["fs","require","path","syllableFilePath","join","__dirname","file","readFileSync","dictionaryInitialArray","split","dictionaryArray","filter","string","includes","stringsToObjects","arr","obj","i","length","newKey","match","slice","toString","dictionaryObject","module","exports"],"mappings":"AAAA;;AAEA,IAAMA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAME,gBAAgB,GAAGD,IAAI,CAACE,IAAL,CAAUC,SAAV,EAAqB,8BAArB,CAAzB;AAEA,IAAMC,IAAI,GAAGN,EAAE,CAACO,YAAH,CAAgBJ,gBAAhB,EAAkC,MAAlC,CAAb;AAEA,IAAMK,sBAAsB,GAAGF,IAAI,CAACG,KAAL,CAAW,IAAX,CAA/B;AAEA,IAAMC,eAAe,GAAGF,sBAAsB,CAACG,MAAvB,CAA+B,UAACC,MAAD,EAAY;AAC/D,MAAI,CAACA,MAAM,CAACC,QAAP,CAAgB,KAAhB,CAAL,EAA6B;AACzB,QAAI,CAACD,MAAM,CAACC,QAAP,CAAgB,KAAhB,CAAL,EAA6B;AACzB,UAAI,CAACD,MAAM,CAACC,QAAP,CAAgB,KAAhB,CAAL,EAA6B;AACzB,eAAOD,MAAP;AACH;AACJ;AACJ;AACJ,CARuB,CAAxB;;AAUA,IAAME,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAUC,GAAV,EAAe;AACpC,MAAIC,GAAG,GAAG,EAAV;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,GAAG,CAACG,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;AACjC,QAAIE,MAAM,GAAGJ,GAAG,CAACE,CAAD,CAAH,CAAOG,KAAP,CAAa,SAAb,CAAb;AACAJ,IAAAA,GAAG,CAACG,MAAD,CAAH,GAAcJ,GAAG,CAACE,CAAD,CAAH,CAAOI,KAAP,CAAaF,MAAM,CAACG,QAAP,GAAkBJ,MAAlB,GAA2B,CAAxC,CAAd;AACH;;AACD,SAAOF,GAAP;AACH,CAPD;;AASA,IAAMO,gBAAgB,GAAGT,gBAAgB,CAACJ,eAAD,CAAzC;AAEAc,MAAM,CAACC,OAAP,GAAiBF,gBAAjB","sourcesContent":["'use strict';\n\nconst fs = require('fs');\nvar path = require('path');\nconst syllableFilePath = path.join(__dirname, 'TextFiles/syllableDictionary');\n\nconst file = fs.readFileSync(syllableFilePath, \"utf8\");\n\nconst dictionaryInitialArray = file.split('\\n');\n\nconst dictionaryArray = dictionaryInitialArray.filter( (string) => {\n    if (!string.includes('(1)')) {\n        if (!string.includes('(2)')) {\n            if (!string.includes('(3)')) {\n                return string;\n            }\n        }\n    }\n})\n\nconst stringsToObjects = function (arr) {\n    let obj = {};\n    for (let i = 0; i < arr.length; i++) {\n        let newKey = arr[i].match(/^[^\\s]+/);\n        obj[newKey] = arr[i].slice(newKey.toString().length + 2);\n    }\n    return obj;\n}\n\nconst dictionaryObject = stringsToObjects(dictionaryArray);\n\nmodule.exports = dictionaryObject;\n"]},"metadata":{},"sourceType":"script"}